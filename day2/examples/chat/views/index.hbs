<section class="container">
  <h1 class="center">Socket.IO Examples</h1>

  <div class="row">
    <div class="col-md-6 box">
      <h2>Understanding WebSockets</h2>
      <p>The internet first began as a trove of information made easily accessible by a collection of HTML pages. This mechanism
        for information dissemination was just a bunch of static assets, not meant to be dynamic. But thanks to Microsoft
        the web was introduced to XMLHttpRequest and AJAX. Though this allowed webpages to become more dynamic, it didn't
        allow for true bi-directional communication between the client and the server. That's what WebSockets come in. Polling
        and Long Polling often leads to high network traffic and latency issues, but implementing WebSockets solves this
        problem by eradicating polling altogether. The WebSocket interface opens a communication channel between the client
        and server via a socket connection on the web, and both the client and server can send data at any time.</p>

      <h2>What is Socket.IO?</h2>
      <p>Socket.io is a library that allows for realtime, bi-directional communication between the client and server. It uses
        feature detection to figure out if the connection will be established via WebSockets, Long Polling, Flash, etc, though
        it primarily uses the WebSocket protocol.</p>

      <h2>Instructions</h2>
      <p>Follow the Socket.IO examples instructions at <a href="https://github.com/horizons-school-of-technology/week05/tree/master/day2/examples/README.md">https://github.com/horizons-school-of-technology/week05/tree/master/day2/examples/README.md</a></p><br>
      <div class="roomSet block">
        <strong>Current Room: </strong>
        <div class="currentRoom">None</div> <br>
        <strong>Select a room to join: </strong> <br>
        <button class="inline roomselect submitbutton" value="Room 1">Room 1</button>
        <button class="inline roomselect submitbutton" value="Room 2">Room 2</button>
      </div> <br>
      <form class="username block">
        <strong>Enter a username: </strong> <br>
        <input id="usernamebox" class="inline typebox" type="text" placeholder="Username Here">
        <button type="submit" class="inline submitbutton">Submit</button>
      </form>
    </div>
    <div class="col-md-6 box">
      <div class="textbox">
      </div>
      <form class="inputbox block" style="display:none">
        <input id="messagebox" class="inline typebox" type="text" placeholder="Say Something...">
        <button class="inline submitbutton">Send</button>
      </form>
    </div>
  </div>
</section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js"></script>
<script>
  var socket = io('http://localhost:3000');
  socket.on('connect', function () {
    console.log('Connected!');
  });

  socket.on('serverMessage', function (text) {
    $('.textbox').append(text + '<br>');
    $('.textbox').scrollTop($('.textbox').height());
  });

  $('.username').submit(function (event) {
    event.preventDefault();
    var name = $('#usernamebox').val();
    console.log('clicked!', name)
    $('#usernamebox').val('')
    if (name) {
      $('.username').css('display', 'none');
      $('.inputbox').css('display', 'block');
      socket.emit('newUser', name);
    }
  });

  $('.inputbox').submit(function (event) {
    event.preventDefault();
    var text = $('#messagebox').val();
    $('#messagebox').val('')
    if (text) {
      socket.emit('message', text);
    }
  });

  $('.roomselect').click(function (event) {
    var room = $(this).val();
    $('.textbox').empty();
    $('.currentRoom').text(room);
    socket.emit('roomSelect', room);
  })

</script>
